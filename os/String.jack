class String {

    field Array str;
    field int length, max;

    // new creates and returns a maxLength-size array, and set its length to 0.
    constructor String new(int maxLength) {
        if (maxLength < 0) {
            do Sys.error(14);
        }

        if (maxLength > 0) {
            let str = Array.new(maxLength);
        }

        let length = 0;
        let max = maxLength;
        return this;
    }

    // dispose de-allocates this string from heap.
    method void dispose() {
        if (length > 0) {
            do str.dispose();
        } else {
            do Memory.deAlloc(this);
        }
        return;
    }

    // length returns the current length of this string.
    method int length() {
        return length;
    }

    // charAt returns the character at given index of this string.
    method char charAt(int j) {
        if ((j < 0) | ~(j < length)) {
            do Sys.error(15);
        }
        return str[j];
    }

    // setCharAt sets c to given index of this string.
    method void setCharAt(int j, char c) {
        if ((j < 0) | ~(j < length)) {
            do Sys.error(16);
        }
        let str[j] = c;
        return;
    }

    // appendChar appends given character at the end of this string.
    method String appendChar(char c) {
        if (~(length < max)) {
            do Sys.error(17);
        }
        let str[length] = c;
        let length = length + 1;
        return this;
    }

    // eraseLastChar erases the last character of this string.
    method void eraseLastChar() {
        if (length = 0) {
            do Sys.error(18);
        }
        let length = length - 1;
        let str[length] = 0;
        return;
    }

    // intValue turns this string into an integer value.
    method int intValue() {
        var int val, i;
        var char d;
        var boolean isNeg;

        // if the first character is '-', set isNeg to true
        let isNeg = (str[0] = 45);

        while (i < length) {
            let d = str[i] - 48;
            if (~(d < 0) & ~(d > 9)) {
                let val = val * 10 + d;
            }
            let i = i + 1;
        }

        if (isNeg) {
            return -val;
        }
        return val;
    }

    // setInt turns given integer value into string
    method void setInt(int val) {
        var int least, i;
        var Array temp;
        var boolean isNeg;

        if (max = 0) {
            do Sys.error(19);
        }

        let temp = Array.new(6);
        let isNeg = (val < 0);
        let val = Math.abs(val);

        while ((val > 0) & (i < 5)) {
            let least = val - (val / 10 * 10);
            let temp[i] = least + 48;
            let val = val / 10;
            let i = i + 1;
        }

        if (isNeg) {
            let temp[i] = 45;
            let i = i + 1;
        }

        // update this string
        if (length > 0) {
            do str.dispose();
        }
        let str = Array.new(max);
        let length = i;

        while (i > 0) {
            do setCharAt((length - i), temp[i - 1]);
            let i = i - 1;
        }

        do temp.dispose();
        
        return;
    }

    // newLine returns the ASCII code of newline character.
    function char newLine() {
        return 128;
    }

    // backSpace returns the ASCII code of back-space character.
    function char backSpace() {
        return 129;
    }

    // doubleQuote returns the ASCII code of double-quote character.
    function char doubleQuote() {
        return 34;
    }
}
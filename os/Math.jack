class Math {
    
    // powerOf2 should be : [0, 16384, 8192, 4096, 2048, 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 1]
    static Array powerOf2;

    // init initializes the library.
    function void init() {
        var int i;

        let powerOf2 = Array.new(16);
        let powerOf2[15] = 1;
        let powerOf2[0] = 0;

        let i = 14;
        while (i > 0) {
            let powerOf2[i] = powerOf2[i+1] + powerOf2[i+1];
            let i = i - 1;
        }

        return;
    }

    // abs returns the absolute value of n.
    function int abs(int n) {
        if (n < 0) {
            return -n;
        }
        return n;
    }

    // multiply returns the product of x and y.
    function int multiply(int x, int y) {
        var int sum, shiftedX, i;
        var boolean isNeg;

        // if either x or y is negative, set isNeg to true
        let isNeg = (x < 0 & y > 0) | (x > 0 & y < 0);

        let x = Math.abs(x);
        let y = Math.abs(y);

        let shiftedX = x;
        let i = 15;

        while (i > 0) {
            if (~((y & powerOf2[i]) = 0)) {
                let sum = sum + shiftedX;
            }
            let shiftedX = shiftedX + shiftedX;
            let i = i - 1;
        }

        if (isNeg) {
            return -sum;
        }
        return sum;
    }

    // divide returns the quotient of x and y.
    function int divide(int x, int y) {
        var boolean isNeg;

        if (y = 0) {
            do Sys.error(3);
        }

        let isNeg = (x < 0 & y > 0) | (x > 0 & y < 0);

        let x = Math.abs(x);
        let y = Math.abs(y);

        if (isNeg) {
            return -Math.divideBody(x, y);
        }
        return Math.divideBody(x, y);
    }

    // divideBody returns the quotient of x and y if both are positive.
    function int divideBody(int x, int y) {
        var int q, i;

        if (y > x) {
            return 0;
        }

        let q = Math.divideBody(x, (y + y));

        if ((x - ((q + q) * y)) < y) {
            return q + q;
        }
        return q + q + 1;
    }

    // modulo calculates remainder of x/y.
    function int modulo(int x, int y) {
        var int remainder;

        let remainder = x - (x / y * y);

        return remainder;
    }

    // power returns x to power y.
    function int power(int x, int y) {
        var int n;

        let n = 1;

        while (y > 0) {
            let n = n * x;
            let y = y - 1;
        }

        return n;
    }

    // sqrt returns the integer part of the square root of n.
    function int sqrt(int n) {
        var int m, i, temp, temp2;

        let i = 7;

        while (i > -1) {
            let temp = m + Math.power(2, i);
            let temp2 = Math.power(temp, 2);
            if (~(temp2 > n) & (temp2 > 0)) {
                let m = temp;
            }
            let i = i - 1;
        }

        return m;
    }

    // max compares x and y, then returns the greater number.
    function int max(int x, int y) {
        if (x > y) {
            return x;
        }
        return y;
        
    }

    // min compares x and y, then returns the smaller number.
    function int min(int x, int y) {
        if (x < y) {
            return x;
        }
        return y;
    }
}